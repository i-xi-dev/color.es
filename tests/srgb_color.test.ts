import { assertStrictEquals, assertThrows } from "./deps.ts";
import { SRgbColor } from "../mod.ts";

Deno.test("SRgbColor.prototype.r", () => {
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: 1000, g: 0, b: 0 }).r, 1);
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: 256, g: 0, b: 0 }).r, 1);
  for (let i = 0; i <= 255; i++) {
    assertStrictEquals(SRgbColor.fromRgbBytes({ r: i, g: 0, b: 0 }).r, i / 255);
  }
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: -1, g: 0, b: 0 }).r, 0);
});

Deno.test("SRgbColor.prototype.g", () => {
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: 0, g: 1000, b: 0 }).g, 1);
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: 0, g: 256, b: 0 }).g, 1);
  for (let i = 0; i <= 255; i++) {
    assertStrictEquals(SRgbColor.fromRgbBytes({ r: 0, g: i, b: 0 }).g, i / 255);
  }
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: 0, g: -1, b: 0 }).g, 0);
});

Deno.test("SRgbColor.prototype.b", () => {
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: 0, g: 0, b: 1000 }).b, 1);
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: 0, g: 0, b: 256 }).b, 1);
  for (let i = 0; i <= 255; i++) {
    assertStrictEquals(SRgbColor.fromRgbBytes({ r: 0, g: 0, b: i }).b, i / 255);
  }
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: 0, g: 0, b: -1 }).b, 0);
});

Deno.test("SRgbColor.prototype.rByte", () => {
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: 1000, g: 0, b: 0 }).rByte, 255);
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: 256, g: 0, b: 0 }).rByte, 255);
  for (let i = 0; i <= 255; i++) {
    assertStrictEquals(SRgbColor.fromRgbBytes({ r: i, g: 0, b: 0 }).rByte, i);
  }
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: -1, g: 0, b: 0 }).rByte, 0);
});

Deno.test("SRgbColor.prototype.gByte", () => {
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: 0, g: 1000, b: 0 }).gByte, 255);
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: 0, g: 256, b: 0 }).gByte, 255);
  for (let i = 0; i <= 255; i++) {
    assertStrictEquals(SRgbColor.fromRgbBytes({ r: 0, g: i, b: 0 }).gByte, i);
  }
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: 0, g: -1, b: 0 }).gByte, 0);
});

Deno.test("SRgbColor.prototype.bByte", () => {
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: 0, g: 0, b: 1000 }).bByte, 255);
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: 0, g: 0, b: 256 }).bByte, 255);
  for (let i = 0; i <= 255; i++) {
    assertStrictEquals(SRgbColor.fromRgbBytes({ r: 0, g: 0, b: i }).bByte, i);
  }
  assertStrictEquals(SRgbColor.fromRgbBytes({ r: 0, g: 0, b: -1 }).bByte, 0);
});

Deno.test("SRgbColor.prototype.toHsl() 1", () => {
  const cases = [
    /* ChromeのF12から */
    // $01 chromeのF12だとこれは彩度0。なんで？ firefoxのF12は形式変換できないのでわからんが赤のところにカーソルあるから多分1
    { r: 0, h: "0.00", s: "0.00", l: "0.00" },
    { r: 1, h: "0.00", s: "1.00", l: "0.00"/*0.20*/ }, // $01
    { r: 2, h: "0.00", s: "1.00", l: "0.00"/*0.39*/ }, // $01
    { r: 3, h: "0.00", s: "1.00", l: "0.01"/*0.59*/ }, // $01
    { r: 4, h: "0.00", s: "1.00", l: "0.01"/*0.78*/ }, // $01
    { r: 5, h: "0.00", s: "1.00", l: "0.01"/*0.98*/ }, // $01
    { r: 6, h: "0.00", s: "1.00", l: "0.01"/*1.18*/ },
    { r: 7, h: "0.00", s: "1.00", l: "0.01"/*1.37*/ },
    { r: 8, h: "0.00", s: "1.00", l: "0.02"/*1.57*/ },
    { r: 9, h: "0.00", s: "1.00", l: "0.02"/*1.76*/ },
    { r: 10, h: "0.00", s: "1.00", l: "0.02"/*1.96*/ },
    { r: 11, h: "0.00", s: "1.00", l: "0.02"/*2.16*/ },
    { r: 12, h: "0.00", s: "1.00", l: "0.02"/*2.35*/ },
    { r: 13, h: "0.00", s: "1.00", l: "0.03"/*2.55*/ },
    { r: 14, h: "0.00", s: "1.00", l: "0.03"/*2.75*/ },
    { r: 15, h: "0.00", s: "1.00", l: "0.03"/*2.94*/ },
    { r: 16, h: "0.00", s: "1.00", l: "0.03"/*3.14*/ },
    { r: 17, h: "0.00", s: "1.00", l: "0.03"/*3.33*/ },
    { r: 18, h: "0.00", s: "1.00", l: "0.04"/*3.53*/ },
    { r: 19, h: "0.00", s: "1.00", l: "0.04"/*3.73*/ },
    { r: 20, h: "0.00", s: "1.00", l: "0.04"/*3.92*/ },
    { r: 21, h: "0.00", s: "1.00", l: "0.04"/*4.12*/ },
    { r: 22, h: "0.00", s: "1.00", l: "0.04"/*4.31*/ },
    { r: 23, h: "0.00", s: "1.00", l: "0.05"/*4.51*/ },
    { r: 24, h: "0.00", s: "1.00", l: "0.05"/*4.71*/ },
    { r: 25, h: "0.00", s: "1.00", l: "0.05"/*4.90*/ },
    { r: 26, h: "0.00", s: "1.00", l: "0.05"/*5.10*/ },
    { r: 27, h: "0.00", s: "1.00", l: "0.05"/*5.29*/ },
    { r: 28, h: "0.00", s: "1.00", l: "0.05"/*5.49*/ },
    { r: 29, h: "0.00", s: "1.00", l: "0.06"/*5.69*/ },
    { r: 30, h: "0.00", s: "1.00", l: "0.06"/*5.88*/ },
    { r: 31, h: "0.00", s: "1.00", l: "0.06"/*6.08*/ },
    { r: 32, h: "0.00", s: "1.00", l: "0.06"/*6.27*/ },
    { r: 33, h: "0.00", s: "1.00", l: "0.06"/*6.47*/ },
    { r: 34, h: "0.00", s: "1.00", l: "0.07"/*6.67*/ },
    { r: 35, h: "0.00", s: "1.00", l: "0.07"/*6.86*/ },
    { r: 36, h: "0.00", s: "1.00", l: "0.07"/*7.06*/ },
    { r: 37, h: "0.00", s: "1.00", l: "0.07"/*7.25*/ },
    { r: 38, h: "0.00", s: "1.00", l: "0.07"/*7.45*/ },
    { r: 39, h: "0.00", s: "1.00", l: "0.08"/*7.65*/ },
    { r: 40, h: "0.00", s: "1.00", l: "0.08"/*7.84*/ },
    { r: 41, h: "0.00", s: "1.00", l: "0.08"/*8.04*/ },
    { r: 42, h: "0.00", s: "1.00", l: "0.08"/*8.24*/ },
    { r: 43, h: "0.00", s: "1.00", l: "0.08"/*8.43*/ },
    { r: 44, h: "0.00", s: "1.00", l: "0.09"/*8.63*/ },
    { r: 45, h: "0.00", s: "1.00", l: "0.09"/*8.82*/ },
    { r: 46, h: "0.00", s: "1.00", l: "0.09"/*9.02*/ },
    { r: 47, h: "0.00", s: "1.00", l: "0.09"/*9.22*/ },
    { r: 48, h: "0.00", s: "1.00", l: "0.09"/*9.41*/ },
    { r: 49, h: "0.00", s: "1.00", l: "0.10"/*9.61*/ },
    { r: 50, h: "0.00", s: "1.00", l: "0.10"/*9.80*/ },
    { r: 51, h: "0.00", s: "1.00", l: "0.10"/*10.00*/ },
    { r: 52, h: "0.00", s: "1.00", l: "0.10"/*10.20*/ },
    { r: 53, h: "0.00", s: "1.00", l: "0.10"/*10.39*/ },
    { r: 54, h: "0.00", s: "1.00", l: "0.11"/*10.59*/ },
    { r: 55, h: "0.00", s: "1.00", l: "0.11"/*10.78*/ },
    { r: 56, h: "0.00", s: "1.00", l: "0.11"/*10.98*/ },
    { r: 57, h: "0.00", s: "1.00", l: "0.11"/*11.18*/ },
    { r: 58, h: "0.00", s: "1.00", l: "0.11"/*11.37*/ },
    { r: 59, h: "0.00", s: "1.00", l: "0.12"/*11.57*/ },
    { r: 60, h: "0.00", s: "1.00", l: "0.12"/*11.76*/ },
    { r: 61, h: "0.00", s: "1.00", l: "0.12"/*11.96*/ },
    { r: 62, h: "0.00", s: "1.00", l: "0.12"/*12.16*/ },
    { r: 63, h: "0.00", s: "1.00", l: "0.12"/*12.35*/ },
    { r: 64, h: "0.00", s: "1.00", l: "0.13"/*12.55*/ },
    { r: 65, h: "0.00", s: "1.00", l: "0.13"/*12.75*/ },
    { r: 66, h: "0.00", s: "1.00", l: "0.13"/*12.94*/ },
    { r: 67, h: "0.00", s: "1.00", l: "0.13"/*13.14*/ },
    { r: 68, h: "0.00", s: "1.00", l: "0.13"/*13.33*/ },
    { r: 69, h: "0.00", s: "1.00", l: "0.14"/*13.53*/ },
    { r: 70, h: "0.00", s: "1.00", l: "0.14"/*13.73*/ },
    { r: 71, h: "0.00", s: "1.00", l: "0.14"/*13.92*/ },
    { r: 72, h: "0.00", s: "1.00", l: "0.14"/*14.12*/ },
    { r: 73, h: "0.00", s: "1.00", l: "0.14"/*14.31*/ },
    { r: 74, h: "0.00", s: "1.00", l: "0.15"/*14.51*/ },
    { r: 75, h: "0.00", s: "1.00", l: "0.15"/*14.71*/ },
    { r: 76, h: "0.00", s: "1.00", l: "0.15"/*14.90*/ },
    { r: 77, h: "0.00", s: "1.00", l: "0.15"/*15.10*/ },
    { r: 78, h: "0.00", s: "1.00", l: "0.15"/*15.29*/ },
    { r: 79, h: "0.00", s: "1.00", l: "0.15"/*15.49*/ },
    { r: 80, h: "0.00", s: "1.00", l: "0.16"/*15.69*/ },
    { r: 81, h: "0.00", s: "1.00", l: "0.16"/*15.88*/ },
    { r: 82, h: "0.00", s: "1.00", l: "0.16"/*16.08*/ },
    { r: 83, h: "0.00", s: "1.00", l: "0.16"/*16.27*/ },
    { r: 84, h: "0.00", s: "1.00", l: "0.16"/*16.47*/ },
    { r: 85, h: "0.00", s: "1.00", l: "0.17"/*16.67*/ },
    { r: 86, h: "0.00", s: "1.00", l: "0.17"/*16.86*/ },
    { r: 87, h: "0.00", s: "1.00", l: "0.17"/*17.06*/ },
    { r: 88, h: "0.00", s: "1.00", l: "0.17"/*17.25*/ },
    { r: 89, h: "0.00", s: "1.00", l: "0.17"/*17.45*/ },
    { r: 90, h: "0.00", s: "1.00", l: "0.18"/*17.65*/ },
    { r: 91, h: "0.00", s: "1.00", l: "0.18"/*17.84*/ },
    { r: 92, h: "0.00", s: "1.00", l: "0.18"/*18.04*/ },
    { r: 93, h: "0.00", s: "1.00", l: "0.18"/*18.24*/ },
    { r: 94, h: "0.00", s: "1.00", l: "0.18"/*18.43*/ },
    { r: 95, h: "0.00", s: "1.00", l: "0.19"/*18.63*/ },
    { r: 96, h: "0.00", s: "1.00", l: "0.19"/*18.82*/ },
    { r: 97, h: "0.00", s: "1.00", l: "0.19"/*19.02*/ },
    { r: 98, h: "0.00", s: "1.00", l: "0.19"/*19.22*/ },
    { r: 99, h: "0.00", s: "1.00", l: "0.19"/*19.41*/ },
    { r: 100, h: "0.00", s: "1.00", l: "0.20"/*19.61*/ },
    { r: 101, h: "0.00", s: "1.00", l: "0.20"/*19.80*/ },
    { r: 102, h: "0.00", s: "1.00", l: "0.20"/*20.00*/ },
    { r: 103, h: "0.00", s: "1.00", l: "0.20"/*20.20*/ },
    { r: 104, h: "0.00", s: "1.00", l: "0.20"/*20.39*/ },
    { r: 105, h: "0.00", s: "1.00", l: "0.21"/*20.59*/ },
    { r: 106, h: "0.00", s: "1.00", l: "0.21"/*20.78*/ },
    { r: 107, h: "0.00", s: "1.00", l: "0.21"/*20.98*/ },
    { r: 108, h: "0.00", s: "1.00", l: "0.21"/*21.18*/ },
    { r: 109, h: "0.00", s: "1.00", l: "0.21"/*21.37*/ },
    { r: 110, h: "0.00", s: "1.00", l: "0.22"/*21.57*/ },
    { r: 111, h: "0.00", s: "1.00", l: "0.22"/*21.76*/ },
    { r: 112, h: "0.00", s: "1.00", l: "0.22"/*21.96*/ },
    { r: 113, h: "0.00", s: "1.00", l: "0.22"/*22.16*/ },
    { r: 114, h: "0.00", s: "1.00", l: "0.22"/*22.35*/ },
    { r: 115, h: "0.00", s: "1.00", l: "0.23"/*22.55*/ },
    { r: 116, h: "0.00", s: "1.00", l: "0.23"/*22.75*/ },
    { r: 117, h: "0.00", s: "1.00", l: "0.23"/*22.94*/ },
    { r: 118, h: "0.00", s: "1.00", l: "0.23"/*23.14*/ },
    { r: 119, h: "0.00", s: "1.00", l: "0.23"/*23.33*/ },
    { r: 120, h: "0.00", s: "1.00", l: "0.24"/*23.53*/ },
    { r: 121, h: "0.00", s: "1.00", l: "0.24"/*23.73*/ },
    { r: 122, h: "0.00", s: "1.00", l: "0.24"/*23.92*/ },
    { r: 123, h: "0.00", s: "1.00", l: "0.24"/*24.12*/ },
    { r: 124, h: "0.00", s: "1.00", l: "0.24"/*24.31*/ },
    { r: 125, h: "0.00", s: "1.00", l: "0.25"/*24.51*/ },
    { r: 126, h: "0.00", s: "1.00", l: "0.25"/*24.71*/ },
    { r: 127, h: "0.00", s: "1.00", l: "0.25"/*24.90*/ },
    { r: 128, h: "0.00", s: "1.00", l: "0.25"/*25.10*/ },
    { r: 129, h: "0.00", s: "1.00", l: "0.25"/*25.29*/ },
    { r: 130, h: "0.00", s: "1.00", l: "0.25"/*25.49*/ },
    { r: 131, h: "0.00", s: "1.00", l: "0.26"/*25.69*/ },
    { r: 132, h: "0.00", s: "1.00", l: "0.26"/*25.88*/ },
    { r: 133, h: "0.00", s: "1.00", l: "0.26"/*26.08*/ },
    { r: 134, h: "0.00", s: "1.00", l: "0.26"/*26.27*/ },
    { r: 135, h: "0.00", s: "1.00", l: "0.26"/*26.47*/ },
    { r: 136, h: "0.00", s: "1.00", l: "0.27"/*26.67*/ },
    { r: 137, h: "0.00", s: "1.00", l: "0.27"/*26.86*/ },
    { r: 138, h: "0.00", s: "1.00", l: "0.27"/*27.06*/ },
    { r: 139, h: "0.00", s: "1.00", l: "0.27"/*27.25*/ },
    { r: 140, h: "0.00", s: "1.00", l: "0.27"/*27.45*/ },
    { r: 141, h: "0.00", s: "1.00", l: "0.28"/*27.65*/ },
    { r: 142, h: "0.00", s: "1.00", l: "0.28"/*27.84*/ },
    { r: 143, h: "0.00", s: "1.00", l: "0.28"/*28.04*/ },
    { r: 144, h: "0.00", s: "1.00", l: "0.28"/*28.24*/ },
    { r: 145, h: "0.00", s: "1.00", l: "0.28"/*28.43*/ },
    { r: 146, h: "0.00", s: "1.00", l: "0.29"/*28.63*/ },
    { r: 147, h: "0.00", s: "1.00", l: "0.29"/*28.82*/ },
    { r: 148, h: "0.00", s: "1.00", l: "0.29"/*29.02*/ },
    { r: 149, h: "0.00", s: "1.00", l: "0.29"/*29.22*/ },
    { r: 150, h: "0.00", s: "1.00", l: "0.29"/*29.41*/ },
    { r: 151, h: "0.00", s: "1.00", l: "0.30"/*29.61*/ },
    { r: 152, h: "0.00", s: "1.00", l: "0.30"/*29.80*/ },
    { r: 153, h: "0.00", s: "1.00", l: "0.30"/*30.00*/ },
    { r: 154, h: "0.00", s: "1.00", l: "0.30"/*30.20*/ },
    { r: 155, h: "0.00", s: "1.00", l: "0.30"/*30.39*/ },
    { r: 156, h: "0.00", s: "1.00", l: "0.31"/*30.59*/ },
    { r: 157, h: "0.00", s: "1.00", l: "0.31"/*30.78*/ },
    { r: 158, h: "0.00", s: "1.00", l: "0.31"/*30.98*/ },
    { r: 159, h: "0.00", s: "1.00", l: "0.31"/*31.18*/ },
    { r: 160, h: "0.00", s: "1.00", l: "0.31"/*31.37*/ },
    { r: 161, h: "0.00", s: "1.00", l: "0.32"/*31.57*/ },
    { r: 162, h: "0.00", s: "1.00", l: "0.32"/*31.76*/ },
    { r: 163, h: "0.00", s: "1.00", l: "0.32"/*31.96*/ },
    { r: 164, h: "0.00", s: "1.00", l: "0.32"/*32.16*/ },
    { r: 165, h: "0.00", s: "1.00", l: "0.32"/*32.35*/ },
    { r: 166, h: "0.00", s: "1.00", l: "0.33"/*32.55*/ },
    { r: 167, h: "0.00", s: "1.00", l: "0.33"/*32.75*/ },
    { r: 168, h: "0.00", s: "1.00", l: "0.33"/*32.94*/ },
    { r: 169, h: "0.00", s: "1.00", l: "0.33"/*33.14*/ },
    { r: 170, h: "0.00", s: "1.00", l: "0.33"/*33.33*/ },
    { r: 171, h: "0.00", s: "1.00", l: "0.34"/*33.53*/ },
    { r: 172, h: "0.00", s: "1.00", l: "0.34"/*33.73*/ },
    { r: 173, h: "0.00", s: "1.00", l: "0.34"/*33.92*/ },
    { r: 174, h: "0.00", s: "1.00", l: "0.34"/*34.12*/ },
    { r: 175, h: "0.00", s: "1.00", l: "0.34"/*34.31*/ },
    { r: 176, h: "0.00", s: "1.00", l: "0.35"/*34.51*/ },
    { r: 177, h: "0.00", s: "1.00", l: "0.35"/*34.71*/ },
    { r: 178, h: "0.00", s: "1.00", l: "0.35"/*34.90*/ },
    { r: 179, h: "0.00", s: "1.00", l: "0.35"/*35.10*/ },
    { r: 180, h: "0.00", s: "1.00", l: "0.35"/*35.29*/ },
    { r: 181, h: "0.00", s: "1.00", l: "0.35"/*35.49*/ },
    { r: 182, h: "0.00", s: "1.00", l: "0.36"/*35.69*/ },
    { r: 183, h: "0.00", s: "1.00", l: "0.36"/*35.88*/ },
    { r: 184, h: "0.00", s: "1.00", l: "0.36"/*36.08*/ },
    { r: 185, h: "0.00", s: "1.00", l: "0.36"/*36.27*/ },
    { r: 186, h: "0.00", s: "1.00", l: "0.36"/*36.47*/ },
    { r: 187, h: "0.00", s: "1.00", l: "0.37"/*36.67*/ },
    { r: 188, h: "0.00", s: "1.00", l: "0.37"/*36.86*/ },
    { r: 189, h: "0.00", s: "1.00", l: "0.37"/*37.06*/ },
    { r: 190, h: "0.00", s: "1.00", l: "0.37"/*37.25*/ },
    { r: 191, h: "0.00", s: "1.00", l: "0.37"/*37.45*/ },
    { r: 192, h: "0.00", s: "1.00", l: "0.38"/*37.65*/ },
    { r: 193, h: "0.00", s: "1.00", l: "0.38"/*37.84*/ },
    { r: 194, h: "0.00", s: "1.00", l: "0.38"/*38.04*/ },
    { r: 195, h: "0.00", s: "1.00", l: "0.38"/*38.24*/ },
    { r: 196, h: "0.00", s: "1.00", l: "0.38"/*38.43*/ },
    { r: 197, h: "0.00", s: "1.00", l: "0.39"/*38.63*/ },
    { r: 198, h: "0.00", s: "1.00", l: "0.39"/*38.82*/ },
    { r: 199, h: "0.00", s: "1.00", l: "0.39"/*39.02*/ },
    { r: 200, h: "0.00", s: "1.00", l: "0.39"/*39.22*/ },
    { r: 201, h: "0.00", s: "1.00", l: "0.39"/*39.41*/ },
    { r: 202, h: "0.00", s: "1.00", l: "0.40"/*39.61*/ },
    { r: 203, h: "0.00", s: "1.00", l: "0.40"/*39.80*/ },
    { r: 204, h: "0.00", s: "1.00", l: "0.40"/*40.00*/ },
    { r: 205, h: "0.00", s: "1.00", l: "0.40"/*40.20*/ },
    { r: 206, h: "0.00", s: "1.00", l: "0.40"/*40.39*/ },
    { r: 207, h: "0.00", s: "1.00", l: "0.41"/*40.59*/ },
    { r: 208, h: "0.00", s: "1.00", l: "0.41"/*40.78*/ },
    { r: 209, h: "0.00", s: "1.00", l: "0.41"/*40.98*/ },
    { r: 210, h: "0.00", s: "1.00", l: "0.41"/*41.18*/ },
    { r: 211, h: "0.00", s: "1.00", l: "0.41"/*41.37*/ },
    { r: 212, h: "0.00", s: "1.00", l: "0.42"/*41.57*/ },
    { r: 213, h: "0.00", s: "1.00", l: "0.42"/*41.76*/ },
    { r: 214, h: "0.00", s: "1.00", l: "0.42"/*41.96*/ },
    { r: 215, h: "0.00", s: "1.00", l: "0.42"/*42.16*/ },
    { r: 216, h: "0.00", s: "1.00", l: "0.42"/*42.35*/ },
    { r: 217, h: "0.00", s: "1.00", l: "0.43"/*42.55*/ },
    { r: 218, h: "0.00", s: "1.00", l: "0.43"/*42.75*/ },
    { r: 219, h: "0.00", s: "1.00", l: "0.43"/*42.94*/ },
    { r: 220, h: "0.00", s: "1.00", l: "0.43"/*43.14*/ },
    { r: 221, h: "0.00", s: "1.00", l: "0.43"/*43.33*/ },
    { r: 222, h: "0.00", s: "1.00", l: "0.44"/*43.53*/ },
    { r: 223, h: "0.00", s: "1.00", l: "0.44"/*43.73*/ },
    { r: 224, h: "0.00", s: "1.00", l: "0.44"/*43.92*/ },
    { r: 225, h: "0.00", s: "1.00", l: "0.44"/*44.12*/ },
    { r: 226, h: "0.00", s: "1.00", l: "0.44"/*44.31*/ },
    { r: 227, h: "0.00", s: "1.00", l: "0.45"/*44.51*/ },
    { r: 228, h: "0.00", s: "1.00", l: "0.45"/*44.71*/ },
    { r: 229, h: "0.00", s: "1.00", l: "0.45"/*44.90*/ },
    { r: 230, h: "0.00", s: "1.00", l: "0.45"/*45.10*/ },
    { r: 231, h: "0.00", s: "1.00", l: "0.45"/*45.29*/ },
    { r: 232, h: "0.00", s: "1.00", l: "0.45"/*45.49*/ },
    { r: 233, h: "0.00", s: "1.00", l: "0.46"/*45.69*/ },
    { r: 234, h: "0.00", s: "1.00", l: "0.46"/*45.88*/ },
    { r: 235, h: "0.00", s: "1.00", l: "0.46"/*46.08*/ },
    { r: 236, h: "0.00", s: "1.00", l: "0.46"/*46.27*/ },
    { r: 237, h: "0.00", s: "1.00", l: "0.46"/*46.47*/ },
    { r: 238, h: "0.00", s: "1.00", l: "0.47"/*46.67*/ },
    { r: 239, h: "0.00", s: "1.00", l: "0.47"/*46.86*/ },
    { r: 240, h: "0.00", s: "1.00", l: "0.47"/*47.06*/ },
    { r: 241, h: "0.00", s: "1.00", l: "0.47"/*47.25*/ },
    { r: 242, h: "0.00", s: "1.00", l: "0.47"/*47.45*/ },
    { r: 243, h: "0.00", s: "1.00", l: "0.48"/*47.65*/ },
    { r: 244, h: "0.00", s: "1.00", l: "0.48"/*47.84*/ },
    { r: 245, h: "0.00", s: "1.00", l: "0.48"/*48.04*/ },
    { r: 246, h: "0.00", s: "1.00", l: "0.48"/*48.24*/ },
    { r: 247, h: "0.00", s: "1.00", l: "0.48"/*48.43*/ },
    { r: 248, h: "0.00", s: "1.00", l: "0.49"/*48.63*/ },
    { r: 249, h: "0.00", s: "1.00", l: "0.49"/*48.82*/ },
    { r: 250, h: "0.00", s: "1.00", l: "0.49"/*49.02*/ },
    { r: 251, h: "0.00", s: "1.00", l: "0.49"/*49.22*/ },
    { r: 252, h: "0.00", s: "1.00", l: "0.49"/*49.41*/ },
    { r: 253, h: "0.00", s: "1.00", l: "0.50"/*49.61*/ },
    { r: 254, h: "0.00", s: "1.00", l: "0.50"/*49.80*/ },
    { r: 255, h: "0.00", s: "1.00", l: "0.50" },
  ];

  for (const c of cases) {
    const hsl = SRgbColor.fromRgbBytes({ r: c.r, g: 0, b: 0 }).toHsl();
    assertStrictEquals(hsl.h.toFixed(2), c.h);
    assertStrictEquals(hsl.s.toFixed(2), c.s);
    assertStrictEquals(hsl.l.toFixed(2), c.l);
  }
});

Deno.test("SRgbColor.prototype.toHsl() 2", () => {
  const cases = [
    // { x: 0, h: "0.00", s: "1.00", l: "0.50" },
    // { x: 1, h: "0.00", s: "1.00", l: "0.50"/*50.20*/ },
    // { x: 2, h: "0.00", s: "1.00", l: "0.50"/*50.39*/ },
    // { x: 3, h: "0.00", s: "1.00", l: "0.51"/*50.59*/ },
    // { x: 4, h: "0.00", s: "1.00", l: "0.51"/*50.78*/ },
    // { x: 5, h: "0.00", s: "1.00", l: "0.51"/*50.98*/ },
    // { x: 6, h: "0.00", s: "1.00", l: "0.51"/*51.18*/ },
    // { x: 7, h: "0.00", s: "1.00", l: "0.51"/*51.37*/ },
    // { x: 8, h: "0.00", s: "1.00", l: "0.52"/*51.57*/ },
    // { x: 9, h: "0.00", s: "1.00", l: "0.52"/*51.76*/ },
    // { x: 10, h: "0.00", s: "1.00", l: "0.52"/*51.96*/ },
    // { x: 11, h: "0.00", s: "1.00", l: "0.52"/*52.16*/ },
    // { x: 12, h: "0.00", s: "1.00", l: "0.52"/*52.35*/ },
    // { x: 13, h: "0.00", s: "1.00", l: "0.53"/*52.55*/ },
    // { x: 14, h: "0.00", s: "1.00", l: "0.53"/*52.75*/ },
    // { x: 15, h: "0.00", s: "1.00", l: "0.53"/*52.94*/ },
    // { x: 16, h: "0.00", s: "1.00", l: "0.53"/*53.14*/ },
    // { x: 17, h: "0.00", s: "1.00", l: "0.53"/*53.33*/ },
    // { x: 18, h: "0.00", s: "1.00", l: "0.54"/*53.53*/ },
    // { x: 19, h: "0.00", s: "1.00", l: "0.54"/*53.73*/ },
    // { x: 20, h: "0.00", s: "1.00", l: "0.54"/*53.92*/ },
    // { x: 21, h: "0.00", s: "1.00", l: "0.54"/*54.12*/ },
    // { x: 22, h: "0.00", s: "1.00", l: "0.54"/*54.31*/ },
    // { x: 23, h: "0.00", s: "1.00", l: "0.55"/*54.51*/ },
    // { x: 24, h: "0.00", s: "1.00", l: "0.55"/*54.71*/ },
    // { x: 25, h: "0.00", s: "1.00", l: "0.55"/*54.90*/ },
    // { x: 26, h: "0.00", s: "1.00", l: "0.55"/*55.10*/ },
    // { x: 27, h: "0.00", s: "1.00", l: "0.55"/*55.29*/ },
    // { x: 28, h: "0.00", s: "1.00", l: "0.55"/*55.49*/ },
    // { x: 29, h: "0.00", s: "1.00", l: "0.56"/*55.69*/ },
    // { x: 30, h: "0.00", s: "1.00", l: "0.56"/*55.88*/ },
    // { x: 31, h: "0.00", s: "1.00", l: "0.56"/*56.08*/ },
    // { x: 32, h: "0.00", s: "1.00", l: "0.56"/*56.27*/ },
    // { x: 33, h: "0.00", s: "1.00", l: "0.56"/*56.47*/ },
    // { x: 34, h: "0.00", s: "1.00", l: "0.57"/*56.67*/ },
    // { x: 35, h: "0.00", s: "1.00", l: "0.57"/*56.86*/ },
    // { x: 36, h: "0.00", s: "1.00", l: "0.57"/*57.06*/ },
    // { x: 37, h: "0.00", s: "1.00", l: "0.57"/*57.25*/ },
    // { x: 38, h: "0.00", s: "1.00", l: "0.57"/*57.45*/ },
    // { x: 39, h: "0.00", s: "1.00", l: "0.58"/*57.65*/ },
    // { x: 40, h: "0.00", s: "1.00", l: "0.58"/*57.84*/ },
    // { x: 41, h: "0.00", s: "1.00", l: "0.58"/*58.04*/ },
    // { x: 42, h: "0.00", s: "1.00", l: "0.58"/*58.24*/ },
    // { x: 43, h: "0.00", s: "1.00", l: "0.58"/*58.43*/ },
    // { x: 44, h: "0.00", s: "1.00", l: "0.59"/*58.63*/ },
    // { x: 45, h: "0.00", s: "1.00", l: "0.59"/*58.82*/ },
    // { x: 46, h: "0.00", s: "1.00", l: "0.59"/*59.02*/ },
    { x: 47, h: "0.00", s: "1.00", l: "0.59"/*59.22*/ },
    //{ x: , h: "0.00", s: "1.00", l: "0."/*.*/ },
  ];

  for (const c of cases) {
    const hsl = SRgbColor.fromRgbBytes({ r: 255, g: c.x, b: c.x }).toHsl();
    console.log(hsl)
    assertStrictEquals(hsl.h.toFixed(2), c.h);
    assertStrictEquals(hsl.s.toFixed(2), c.s);
    assertStrictEquals(hsl.l.toFixed(2), c.l);
  }
});